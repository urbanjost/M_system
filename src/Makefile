#@(#) Makefile started by makeout(1) 2019-12-15 18:28:36
# generated by:   ...

# ../example/demo_system_stat_print.f90 \
# ../example/demo_system_stat.f90 \
NULL=
PROGFILES = \
   ../example/demo_system_putenv.f90 \
   ../example/demo_system_rand.f90 \
   ../example/demo_system_readdir.f90 \
   ../example/demo_system_readenv.f90 \
   ../example/demo_system_realpath.f90 \
   ../example/demo_system_remove.f90 \
   ../example/demo_system_rename.f90 \
   ../example/demo_system_rewinddir.f90 \
   ../example/demo_system_rmdir.f90 \
   ../example/demo_system_setsid.f90 \
   ../example/demo_system_setumask.f90 \
   ../example/demo_system_srand.f90 \
   ../example/demo_system_uname.f90 \
   ../example/demo_system_unlink.f90 \
   ../example/demo_system_unsetenv.f90 \
   ../example/demo_system_access.f90 \
   ../example/demo_system_chdir.f90 \
   ../example/demo_system_chmod.f90 \
   ../example/demo_system_chown.f90 \
   ../example/demo_system_clearenv.f90 \
   ../example/demo_system_closedir.f90 \
   ../example/demo_system_cpu_time.f90 \
   ../example/demo_system_errno.f90 \
   ../example/demo_system_getcwd.f90 \
   ../example/demo_system_getegid.f90 \
   ../example/demo_system_getenv.f90 \
   ../example/demo_system_geteuid.f90 \
   ../example/demo_system_getgid.f90 \
   ../example/demo_system_getgrgid.f90 \
   ../example/demo_system_gethostname.f90 \
   ../example/demo_system_getlogin.f90 \
   ../example/demo_system_getpid.f90 \
   ../example/demo_system_getppid.f90 \
   ../example/demo_system_getpwuid.f90 \
   ../example/demo_system_getsid.f90 \
   ../example/demo_system_getuid.f90 \
   ../example/demo_system_getumask.f90 \
   ../example/demo_system_initenv.f90 \
   ../example/demo_system_isblk.f90 \
   ../example/demo_system_ischr.f90 \
   ../example/demo_system_isdir.f90 \
   ../example/demo_system_isfifo.f90 \
   ../example/demo_system_islnk.f90 \
   ../example/demo_system_isreg.f90 \
   ../example/demo_system_issock.f90 \
   ../example/demo_system_kill.f90 \
   ../example/demo_system_link.f90 \
   ../example/demo_system_mkdir.f90 \
   ../example/demo_system_mkfifo.f90 \
   ../example/demo_system_opendir.f90 \
   ../example/demo_system_perm.f90 \
   ../example/demo_system_perror.f90 \
   ../example/demo_system_utime.f90 \
$(NULL)
#   ../test/test_suite_M_system.f90 \

CPROGFILES = 

PROG = ${PROGFILES:.f90=}

CPROG = ${CPROGFILES:.c=}

SRCS =  C-M_system.c M_system.f90 

# create a list of corresponding object files
FOBJS = $(patsubst %.f90,%.o,$(PROGFILES))
FOBJS_DOT = $(notdir $(FOBJS))
OBJS =  C-M_system.o M_system.o 
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
# platform-specific values you will probably change
# 
LIBS := 
CC := cc
CFLAGS := -O
FC := gfortran
FFLAGS := -O
LDFLAGS := -Wl,--allow-multiple-definition
LDFLAGS := 
# 
# You can either ignore it, or disable the "may be used uninitialized"
# warnings with -Wno-maybe-uninitialized or compile with optimizations
# (-O1 and more).
gfortran: F90=gfortran
gfortran: F90FLAGS := -g -O -Wall -std=f2018 -Wextra -Wno-maybe-uninitialized -Wno-uninitialized -finit-local-zero 
gfortran: F90FLAGS := -g -O -Wall -Wextra -Wimplicit-interface -fPIC -fmax-errors=1 -g -fcheck=bounds -fcheck=array-temps -fbacktrace -fcoarray=single 

gfortran: all
	@echo built with $(F90)

nvfortran: F90=nvfortran
nvfortran: F90FLAGS := -Minform=inform -Mbackslash -traceback
nvfortran: all
	@echo built with $(F90)

ifort: F90=ifort
ifort: F90FLAGS := -warn all -traceback
ifort: all
	@echo built with $(F90)

nagfor: F90=nagfor
nagfor: F90FLAGS := -C all
nagfor: all
	@echo built with $(F90)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
all: $(PROG) $(CPROG)
	@echo "That's all folks!"

$(PROG): $(OBJS)

	-$(F90) $(F90FLAGS) $(LDFLAGS) $@.f90 -o $@ $(OBJS) $(LIBS)

clean:
	-rm -f $(PROG) $(CPROG) $(OBJS) $(FOBJS) $(FOBJS_DOT) *.mod
	-rm -f _test* fort.10
	[ -d _scratch ] && rmdir _scratch || true

.SUFFIXES: $(SUFFIXES) .f90 .F90 

.f90.o:
	$(F90) $(F90FLAGS) -c $<

.F90.o:
	$(F90) $(F90FLAGS) -c $<

.PHONY: run
run: $(PROG)
	# run everything
	rm -f fort.10 _test1 _test2 _test3
	[ -d _scratch ] && rmdir _scratch
	echo $? |xargs -n 1|xargs -iXX time XX
	rm -f fort.10 _test1 _test2 _test3
	[ -d _scratch ] && rmdir _scratch

.PHONY: man
man:
	@mandb ../man 1>&2
	@env MANPATH=../man MANWIDTH=256 man -k .|col -b
	@env MANWIDTH=80 MANPATH=../man MANWIDTH=80  man -Tutf8 --regex '.*'|col -b
.PHONY: doxygen
doxygen: 
	doxygen dox.in

.PHONY: help
help:
	: make    '-- build M_system module'
#	: run     '-- run manpage demo programs and test program'
#	: test    '-- run test program'
	: man     '-- show all manpages as text'
	: clean   '-- clean directory of object files and executables'
#	: doxygen '-- run doxygen(1) if you have it'
	: help    '-- display this text'
